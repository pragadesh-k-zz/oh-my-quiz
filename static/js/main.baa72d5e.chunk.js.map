{"version":3,"sources":["images/logo.svg","components/Header.js","components/QuizBody.js","components/Form.js","components/PlayAgain.js","components/Quiz.js","apps/QuizApp.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","image","alt","QuizBody","this","choiceState","choice","status","question","data","seconds","timer","setSeconds","options","updated_options","checkAnswer","correct_answer","onClick","nextQuestion","Component","Question","dangerouslySetInnerHTML","__html","Timer","useEffect","timerId","setTimeout","clearTimeout","Option","icon","white","red","green","setIcon","option","bind","style","float","color","OptionSection","map","key","Form","state","nQuestions","updateData","alpha","forEach","element","shuffled_options","temp","random","Math","floor","incorrect_answers","length","push","splice","index","fetchData","event","a","preventDefault","fetch","response","json","result","results","onSubmit","Number","type","value","onChange","setState","target","required","min","placeholder","max","React","PlayAgain","good","answered","startNewQuiz","padding","margin","textShadow","Quiz","gameState","gameData","questionNumber","handleSubmit","console","log","QuizApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa72d5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a2fa3349.svg\";","import image from \"../images/logo.svg\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <img className=\"logo\" src={image} alt=\"logo\"></img>\r\n      <p className=\"title\">Oh My Quizz!</p>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, Component } from \"react\";\r\nexport default class QuizBody extends Component {\r\n  render() {\r\n    const { choice, status } = this.props.choiceState;\r\n    return (\r\n      <div>\r\n        <Question question={this.props.data.question} />\r\n        <Timer seconds={this.props.timer} setSeconds={this.props.setSeconds} />\r\n        <OptionSection\r\n          options={this.props.data.updated_options}\r\n          checkAnswer={this.props.checkAnswer}\r\n          choice={choice}\r\n          status={status}\r\n          correct_answer={this.props.data.correct_answer}\r\n        />\r\n        <div className=\"next-section\">\r\n          <button className=\"btn-next\" onClick={this.props.nextQuestion}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div className=\"question-box question\">\r\n      <p dangerouslySetInnerHTML={{ __html: props.question }}></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Timer = (props) => {\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      props.setSeconds();\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [props]);\r\n  return (\r\n    <div className=\"timer-box\">\r\n      <div className=\"time-bar\">\r\n        <p className=\"seconds\">{props.seconds}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Option = (props) => {\r\n  const icon = {\r\n    white: [\"none\", \"none\"],\r\n    red: [\"fa fa-times\", \"#fc4828\"],\r\n    green: [\"fa fa-check\", \"#28fc68\"],\r\n  };\r\n  const setIcon =\r\n    props.choice === \"\" && props.status === \"\"\r\n      ? icon.white\r\n      : props.choice === props.option[1]\r\n      ? icon[props.status]\r\n      : props.option[1] === props.correct_answer\r\n      ? icon.green\r\n      : icon.white;\r\n  return (\r\n    <div\r\n      className=\"option-box\"\r\n      onClick={props.checkAnswer.bind(this, props.option[1])}\r\n    >\r\n      <div className={`badge ${props.option[0]}`}>{props.option[0]}</div>\r\n      <span\r\n        className=\"option-text\"\r\n        dangerouslySetInnerHTML={{ __html: props.option[1] }}\r\n      ></span>\r\n      <span\r\n        className={setIcon[0] !== \"none\" ? setIcon[0] : \"\"}\r\n        style={{\r\n          float: \"right\",\r\n          color: setIcon[1] !== \"none\" ? setIcon[1] : \"none\",\r\n        }}\r\n      ></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OptionSection = (props) => {\r\n  return (\r\n    <div className=\"option-section\">\r\n      {props.options.map((option, key) => (\r\n        <Option\r\n          key={key}\r\n          option={option}\r\n          checkAnswer={props.checkAnswer}\r\n          choice={props.choice}\r\n          status={props.status}\r\n          correct_answer={props.correct_answer}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nclass Form extends React.Component {\r\n  state = {\r\n    nQuestions: \"\",\r\n  };\r\n\r\n  // update the response options with A,B,C,D;\r\n  updateData = (data) => {\r\n    const alpha = [\"A\", \"B\", \"C\", \"D\"];\r\n    data.forEach((element) => {\r\n      let temp = [],\r\n        shuffled_options;\r\n      const random = Math.floor(\r\n        Math.random() * element.incorrect_answers.length\r\n      );\r\n      element.incorrect_answers.map((option) => temp.push(option));\r\n      temp.splice(random, 0, element.correct_answer);\r\n      shuffled_options = alpha.map((option, index) => [option, temp[index]]);\r\n      element[\"updated_options\"] = shuffled_options;\r\n    });\r\n    return data;\r\n  };\r\n\r\n  // Fetch the data from DB\r\n  fetchData = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch(\r\n      `https://opentdb.com/api.php?amount=${this.state.nQuestions}&category=11&difficulty=easy&type=multiple`\r\n    );\r\n    // response data\r\n    const data = await response.json();\r\n    // updating data with options A,B,C,D\r\n    const result = this.updateData(data.results);\r\n    // submit the data to the main app\r\n    this.props.onSubmit(Number(this.state.nQuestions), result);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.fetchData}>\r\n        <div className=\"form-section\">\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.nQuestions}\r\n            onChange={(event) =>\r\n              this.setState({ nQuestions: event.target.value })\r\n            }\r\n            required={true}\r\n            min=\"1\"\r\n            className=\"input-ques\"\r\n            placeholder=\"No.Of.Questions\"\r\n            max=\"15\"\r\n          />\r\n          <button className=\"btn-start\">Start Quiz.</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","const PlayAgain = (props) => {\r\n  const good = props.status.answered >= props.status.nQuestions / 2;\r\n  return (\r\n    <div className=\"again\">\r\n      <p className=\"greet\">{good ? \"Congrats!\" : \"Nice Try!\"}</p>\r\n      <button className=\"btn-playagain\" onClick={props.startNewQuiz}>\r\n        Play Again\r\n      </button>\r\n      <p\r\n        style={{\r\n          padding: \"1rem\",\r\n          margin: \"10px 0px\",\r\n          textShadow: \"0px 0px 20px white\",\r\n        }}\r\n      >\r\n        Correct : {props.status.answered} / {props.status.nQuestions}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default PlayAgain;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport QuizBody from \"./QuizBody\";\r\nimport Form from \"../components/Form\";\r\nimport PlayAgain from \"./PlayAgain\";\r\n\r\nclass Quiz extends React.Component {\r\n  state = {\r\n    gameState: false,\r\n    nQuestions: 0,\r\n    gameData: [],\r\n    questionNumber: 0,\r\n    timer: 15,\r\n    choice: \"\",\r\n    status: \"\",\r\n    answered: 0,\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"quiz mounted\");\r\n  }\r\n\r\n  // get the data from API\r\n  handleSubmit = (nQuestions, gameData) => {\r\n    this.setState({\r\n      gameState: true,\r\n      nQuestions,\r\n      gameData,\r\n    });\r\n  };\r\n\r\n  nextQuestion = () => {\r\n    if (this.state.nQuestions - 1 !== this.state.questionNumber) {\r\n      this.setState({\r\n        questionNumber: this.state.questionNumber + 1,\r\n        timer: 20,\r\n        choice: \"\",\r\n        status: \"\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        gameState: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setSeconds = () => {\r\n    if (this.state.timer > 0) {\r\n      this.setState({ timer: this.state.timer - 1 });\r\n    } else {\r\n      this.nextQuestion();\r\n    }\r\n  };\r\n\r\n  checkAnswer = (choice) => {\r\n    if (\r\n      this.state.choice === \"\" &&\r\n      this.state.status === \"\" &&\r\n      this.state.timer !== 0\r\n    ) {\r\n      if (\r\n        choice === this.state.gameData[this.state.questionNumber].correct_answer\r\n      ) {\r\n        this.setState({\r\n          choice,\r\n          status: \"green\",\r\n          answered: this.state.answered + 1,\r\n        });\r\n      } else {\r\n        this.setState({ choice, status: \"red\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      gameData,\r\n      gameState,\r\n      nQuestions,\r\n      questionNumber,\r\n      timer,\r\n      choice,\r\n      status,\r\n      answered,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        {!gameState && nQuestions === 0 ? (\r\n          <Form onSubmit={this.handleSubmit} />\r\n        ) : null}\r\n        {gameState && nQuestions > 0 ? (\r\n          <QuizBody\r\n            data={gameData[questionNumber]}\r\n            timer={timer}\r\n            nextQuestion={this.nextQuestion}\r\n            setSeconds={this.setSeconds}\r\n            checkAnswer={this.checkAnswer}\r\n            choiceState={{ choice, status }}\r\n          />\r\n        ) : null}\r\n        {!gameState && nQuestions > 0 ? (\r\n          <PlayAgain\r\n            startNewQuiz={this.props.startNewQuiz}\r\n            status={{ nQuestions, answered }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport \"./QuizApp.css\";\r\nimport Quiz from \"../components/Quiz\";\r\n// API https://opentdb.com/api.php?amount=1&category=11&difficulty=easy&type=multiple\r\n\r\n// const QuizApp = (props) => {\r\n//   const [quiz, setQuiz] = React.useState(0);\r\n//   const startNewQuiz = (props) => {\r\n//     setQuiz(quiz + 1);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Quiz key={quiz} startNewQuiz={startNewQuiz} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default class QuizApp extends React.Component {\r\n  state = {\r\n    key: 1,\r\n  };\r\n  startNewQuiz = () => {\r\n    this.setState({\r\n      key: this.state.key + 1,\r\n    });\r\n  };\r\n  render() {\r\n    const { key } = this.state;\r\n    return (\r\n      <>\r\n        <Quiz key={key} startNewQuiz={this.startNewQuiz} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./apps/QuizApp\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}