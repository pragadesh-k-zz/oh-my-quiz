{"version":3,"sources":["components/Header.js","components/QuizBody.js","components/Form.js","components/PlayAgain.js","components/Quiz.js","apps/QuizApp.js","reportWebVitals.js","index.js"],"names":["Header","props","className","QuizBody","this","choiceState","choice","status","question","data","seconds","timer","setSeconds","options","updated_options","checkAnswer","correct_answer","onClick","nextQuestion","Component","Question","dangerouslySetInnerHTML","__html","Timer","useEffect","timerId","setTimeout","clearTimeout","Option","color","white","red","green","setColor","option","style","backgroundColor","bind","OptionSection","map","key","Form","state","nQuestions","updateData","alpha","forEach","element","shuffled_options","temp","random","Math","floor","incorrect_answers","length","push","splice","index","fetchData","event","a","preventDefault","fetch","response","json","result","results","onSubmit","Number","type","value","onChange","setState","target","required","min","React","PlayAgain","startNewQuiz","padding","margin","textShadow","answered","Quiz","gameState","gameData","questionNumber","handleSubmit","console","log","QuizApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1d1efd5.chunk.js","sourcesContent":["const Header = (props) => {\r\n  return (\r\n    <header>\r\n      <span className=\"fa fa-flag-checkered\"></span>\r\n      <p>Oh My Quizz!</p>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, Component } from \"react\";\r\nexport default class QuizBody extends Component {\r\n  render() {\r\n    const { choice, status } = this.props.choiceState;\r\n    return (\r\n      <div>\r\n        <Question question={this.props.data.question} />\r\n        <Timer seconds={this.props.timer} setSeconds={this.props.setSeconds} />\r\n        <OptionSection\r\n          options={this.props.data.updated_options}\r\n          checkAnswer={this.props.checkAnswer}\r\n          choice={choice}\r\n          status={status}\r\n          correct_answer={this.props.data.correct_answer}\r\n        />\r\n        <div className=\"next-section\">\r\n          <button className=\"btn-next\" onClick={this.props.nextQuestion}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div className=\"question-box question\">\r\n      <p dangerouslySetInnerHTML={{ __html: props.question }}></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Timer = (props) => {\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      props.setSeconds();\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [props]);\r\n  return (\r\n    <div className=\"timer-box\">\r\n      <div className=\"time-bar\">\r\n        <p className=\"seconds\">{props.seconds}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Option = (props) => {\r\n  const color = {\r\n    white: \"white\",\r\n    red: \"red\",\r\n    green: \"green\",\r\n  };\r\n  const setColor =\r\n    props.choice === \"\" && props.status === \"\"\r\n      ? color.white\r\n      : props.choice === props.option[1]\r\n      ? color[props.status]\r\n      : props.option[1] === props.correct_answer\r\n      ? color.green\r\n      : color.white;\r\n  return (\r\n    <div\r\n      className=\"option-box\"\r\n      style={{ backgroundColor: setColor }}\r\n      onClick={props.checkAnswer.bind(this, props.option[1])}\r\n    >\r\n      <div className={`badge ${props.option[0]}`}>{props.option[0]}</div>\r\n      <p\r\n        className=\"option-text\"\r\n        dangerouslySetInnerHTML={{ __html: props.option[1] }}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OptionSection = (props) => {\r\n  return (\r\n    <div className=\"option-section\">\r\n      {props.options.map((option, key) => (\r\n        <Option\r\n          key={key}\r\n          option={option}\r\n          checkAnswer={props.checkAnswer}\r\n          choice={props.choice}\r\n          status={props.status}\r\n          correct_answer={props.correct_answer}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nclass Form extends React.Component {\r\n  state = {\r\n    nQuestions: 1,\r\n  };\r\n\r\n  // update the response options with A,B,C,D;\r\n  updateData = (data) => {\r\n    const alpha = [\"A\", \"B\", \"C\", \"D\"];\r\n    data.forEach((element) => {\r\n      let temp = [],\r\n        shuffled_options;\r\n      const random = Math.floor(\r\n        Math.random() * element.incorrect_answers.length\r\n      );\r\n      element.incorrect_answers.map((option) => temp.push(option));\r\n      temp.splice(random, 0, element.correct_answer);\r\n      shuffled_options = alpha.map((option, index) => [option, temp[index]]);\r\n      element[\"updated_options\"] = shuffled_options;\r\n    });\r\n    return data;\r\n  };\r\n\r\n  // Fetch the data from DB\r\n  fetchData = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch(\r\n      `https://opentdb.com/api.php?amount=${this.state.nQuestions}&category=11&difficulty=easy&type=multiple`\r\n    );\r\n    // response data\r\n    const data = await response.json();\r\n    // updating data with options A,B,C,D\r\n    const result = this.updateData(data.results);\r\n    // submit the data to the main app\r\n    this.props.onSubmit(Number(this.state.nQuestions), result);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.fetchData}>\r\n        <input\r\n          type=\"number\"\r\n          value={this.state.nQuestions}\r\n          onChange={(event) =>\r\n            this.setState({ nQuestions: event.target.value })\r\n          }\r\n          required={true}\r\n          min=\"1\"\r\n          className=\"input-ques\"\r\n        />\r\n        <button className=\"btn-start\">Start Quiz.</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","const PlayAgain = (props) => (\r\n  <div className=\"again\">\r\n    <p className=\"greet\">Nice Try!</p>\r\n    <button className=\"btn-playagain\" onClick={props.startNewQuiz}>\r\n      Play Again\r\n    </button>\r\n    <p\r\n      style={{\r\n        padding: \"1rem\",\r\n        margin: \"10px 0px\",\r\n        textShadow: \"0px 0px 20px white\",\r\n      }}\r\n    >\r\n      Correct : {props.status.answered} / {props.status.nQuestions}\r\n    </p>\r\n  </div>\r\n);\r\nexport default PlayAgain;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport QuizBody from \"./QuizBody\";\r\nimport Form from \"../components/Form\";\r\nimport PlayAgain from \"./PlayAgain\";\r\n\r\nclass Quiz extends React.Component {\r\n  state = {\r\n    gameState: false,\r\n    nQuestions: 0,\r\n    gameData: [],\r\n    questionNumber: 0,\r\n    timer: 10,\r\n    choice: \"\",\r\n    status: \"\",\r\n    answered: 0,\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"quiz mounted\");\r\n  }\r\n\r\n  // get the data from API\r\n  handleSubmit = (nQuestions, gameData) => {\r\n    this.setState({\r\n      gameState: true,\r\n      nQuestions,\r\n      gameData,\r\n    });\r\n  };\r\n\r\n  nextQuestion = () => {\r\n    if (this.state.nQuestions - 1 !== this.state.questionNumber) {\r\n      this.setState({\r\n        questionNumber: this.state.questionNumber + 1,\r\n        timer: 10,\r\n        choice: \"\",\r\n        status: \"\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        gameState: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setSeconds = () => {\r\n    if (this.state.timer > 0) {\r\n      this.setState({ timer: this.state.timer - 1 });\r\n    } else {\r\n      this.nextQuestion();\r\n    }\r\n  };\r\n\r\n  checkAnswer = (choice) => {\r\n    if (\r\n      this.state.choice === \"\" &&\r\n      this.state.status === \"\" &&\r\n      this.state.timer !== 0\r\n    ) {\r\n      if (\r\n        choice === this.state.gameData[this.state.questionNumber].correct_answer\r\n      ) {\r\n        this.setState({\r\n          choice,\r\n          status: \"green\",\r\n          answered: this.state.answered + 1,\r\n        });\r\n      } else {\r\n        this.setState({ choice, status: \"red\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      gameData,\r\n      gameState,\r\n      nQuestions,\r\n      questionNumber,\r\n      timer,\r\n      choice,\r\n      status,\r\n      answered,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        {!gameState && nQuestions === 0 ? (\r\n          <Form onSubmit={this.handleSubmit} />\r\n        ) : null}\r\n        {gameState && nQuestions > 0 ? (\r\n          <QuizBody\r\n            data={gameData[questionNumber]}\r\n            timer={timer}\r\n            nextQuestion={this.nextQuestion}\r\n            setSeconds={this.setSeconds}\r\n            checkAnswer={this.checkAnswer}\r\n            choiceState={{ choice, status }}\r\n          />\r\n        ) : null}\r\n        {!gameState && nQuestions > 0 ? (\r\n          <PlayAgain\r\n            startNewQuiz={this.props.startNewQuiz}\r\n            status={{ nQuestions, answered }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport \"./QuizApp.css\";\r\nimport Quiz from \"../components/Quiz\";\r\n// API https://opentdb.com/api.php?amount=1&category=11&difficulty=easy&type=multiple\r\n\r\n// const QuizApp = (props) => {\r\n//   const [quiz, setQuiz] = React.useState(0);\r\n//   const startNewQuiz = (props) => {\r\n//     setQuiz(quiz + 1);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Quiz key={quiz} startNewQuiz={startNewQuiz} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default class QuizApp extends React.Component {\r\n  state = {\r\n    key: 1,\r\n  };\r\n  startNewQuiz = () => {\r\n    this.setState({\r\n      key: this.state.key + 1,\r\n    });\r\n  };\r\n  render() {\r\n    const { key } = this.state;\r\n    return (\r\n      <div>\r\n        <Quiz key={key} startNewQuiz={this.startNewQuiz} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./apps/QuizApp\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}