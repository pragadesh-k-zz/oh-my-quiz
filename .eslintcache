[{"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\reportWebVitals.js":"1","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\index.js":"2","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\apps\\QuizApp.js":"3","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\Header.js":"4","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\Quiz.js":"5","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\QuizBody.js":"6","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\Form.js":"7","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\PlayAgain.js":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":509,"mtime":1607255846826,"results":"11","hashOfConfig":"10"},{"size":929,"mtime":1607525916178,"results":"12","hashOfConfig":"10"},{"size":184,"mtime":1607414516897,"results":"13","hashOfConfig":"10"},{"size":1663,"mtime":1607662381114,"results":"14","hashOfConfig":"10"},{"size":3045,"mtime":1607675276605,"results":"15","hashOfConfig":"10"},{"size":1398,"mtime":1607617527847,"results":"16","hashOfConfig":"10"},{"size":242,"mtime":1607577239840,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8kcf3n",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\reportWebVitals.js",[],"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\index.js",[],["36","37"],"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\apps\\QuizApp.js",[],"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\Header.js",[],"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\Quiz.js",[],"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\QuizBody.js",["38"],"import React, { useState, useEffect } from \"react\";\r\nimport PlayAgain from \"./PlayAgain\";\r\nconst QuizBody = (props) => {\r\n  console.log(props.data);\r\n  const [count, setcount] = useState(props.amount);\r\n  const [questionData, setquestionData] = useState(props.data[count]);\r\n  const [seconds, setSeconds] = useState(20);\r\n  const [endGame, setEndGame] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setquestionData(props.data[count]);\r\n    console.log(\"useeffect runned\");\r\n\r\n    if (seconds > 0 && !endGame) {\r\n      let timeOut = setTimeout(() => {\r\n        setSeconds(seconds - 1);\r\n      }, 1000);\r\n      console.log(seconds);\r\n      return () => clearTimeout(timeOut);\r\n    }\r\n  }, [props.data, count, questionData.incorrect_answers, seconds, endGame]);\r\n\r\n  const nextQuestion = () => {\r\n    if (count > 0) {\r\n      setcount(count - 1);\r\n      setSeconds(20);\r\n    } else {\r\n      setEndGame(true);\r\n    }\r\n  };\r\n\r\n  if (seconds === 0 && !endGame) {\r\n    nextQuestion();\r\n    console.log(seconds);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {endGame ? (\r\n        <PlayAgain startNewQuiz={props.startNewQuiz} />\r\n      ) : (\r\n        <>\r\n          <Question question={questionData.question} />\r\n          <Timer seconds={seconds} />\r\n          <OptionSection\r\n            options={questionData.updated_options}\r\n            correct_answer={questionData.correct_answer}\r\n          />\r\n          <div className=\"next-section\">\r\n            <button className=\"btn-next\" onClick={nextQuestion}>\r\n              Next\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div className=\"question-box question\">\r\n      <p dangerouslySetInnerHTML={{ __html: props.question }}></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Timer = (props) => {\r\n  return (\r\n    <div className=\"timer-box\">\r\n      <div className=\"time-bar\">\r\n        <p className=\"seconds\">{props.seconds}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Option = (props) => {\r\n  return (\r\n    <div\r\n      className=\"option-box\"\r\n      onClick={() => props.setValue(props.option[1])}\r\n      style={{\r\n        backgroundColor: props.color,\r\n      }}\r\n    >\r\n      <div className={`badge ${props.option[0]}`}>{props.option[0]}</div>\r\n      <p\r\n        className=\"option-text\"\r\n        dangerouslySetInnerHTML={{ __html: props.option[1] }}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OptionSection = (props) => {\r\n  // console.log(\"updating option section\");\r\n  const [value, setvalue] = useState(\"\");\r\n  const checkAnswer = (value) => {\r\n    return value === props.correct_answer ? \"green\" : \"red\";\r\n  };\r\n  const color = {\r\n    white: \"white\",\r\n    red: \"red\",\r\n    green: \"green\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-section\">\r\n      {props.options.map((option, key) => (\r\n        <Option\r\n          key={key}\r\n          option={option}\r\n          color={option[1] === value ? checkAnswer(value) : \"white\"}\r\n          setValue={setvalue}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizBody;\r\n","C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\Form.js",[],"C:\\pragi\\mycode\\WebFramework\\react_projects\\my-first-app\\src\\components\\PlayAgain.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":102,"column":9,"nodeType":"45","messageId":"46","endLine":102,"endColumn":14},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]